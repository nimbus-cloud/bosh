env = ENV.to_hash
vm_box = 'bosh-stemcell-dbef1d'

%x(vagrant plugin install vagrant-omnibus) unless Vagrant.has_plugin?('vagrant-omnibus')
%x(vagrant plugin install vagrant-vsphere) unless Vagrant.has_plugin?('vagrant-vsphere')
%x(vagrant plugin install vagrant-berkshelf  --plugin-version 2.0.0.rc3) unless Vagrant.has_plugin?('vagrant-berkshelf')

Vagrant.configure('2') do |config|
  config.vm.box = vm_box
  config.ssh.username = 'ubuntu'

  config.vm.define :local do |local|
    local.vm.box_url = "https://bosh-jenkins-artifacts.s3.amazonaws.com/bosh-vagrant-boxes/#{vm_box}-virtualbox.box"
    local.vm.provider :virtualbox do |virtualbox|
      virtualbox.customize ['modifyvm', :id, '--cpus', '2']
      virtualbox.customize ['modifyvm', :id, '--memory', '2048']
    end
  end

  config.vm.define :local2 do |local|
    local.vm.box_url = "https://bosh-jenkins-artifacts.s3.amazonaws.com/bosh-vagrant-boxes/#{vm_box}-virtualbox.box"
    local.vm.provider :virtualbox do |virtualbox|
      virtualbox.customize ['modifyvm', :id, '--cpus', '2']
      virtualbox.customize ['modifyvm', :id, '--memory', '2048']
    end
  end

  config.vm.define :remote do |remote|
    remote.vm.box_url = "https://bosh-jenkins-artifacts.s3.amazonaws.com/bosh-vagrant-boxes/#{vm_box}-aws.box"
    remote.vm.provider :aws do |aws, override|
      aws.instance_type = 'm1.large'
      aws.access_key_id = env.fetch('BOSH_AWS_ACCESS_KEY_ID')
      aws.secret_access_key = env.fetch('BOSH_AWS_SECRET_ACCESS_KEY')
      aws.keypair_name = 'bosh'
      aws.security_groups = ['bosh-stemcell']
      aws.tags = { 'Name' => vm_box }

      override.ssh.username = 'ubuntu'
      override.ssh.private_key_path = '~/.ssh/id_rsa_bosh'
    end
  end

  config.vm.define :vsphere do |remote|
    remote.vm.box = 'dummy'
    remote.vm.network :private_network, ip: env.fetch('BOSH_STEMCELL_BUILDER_IP')
    remote.vm.provider :vsphere do |vsphere|
      vsphere.insecure = env.fetch('BOSH_VAGRANT_VSPHERE_insecure')
      vsphere.host = env.fetch('BOSH_VAGRANT_VSPHERE_host')
      vsphere.user = env.fetch('BOSH_VAGRANT_VSPHERE_user')
      vsphere.password = env.fetch('BOSH_VAGRANT_VSPHERE_password')
      vsphere.data_center_name = env.fetch('BOSH_VAGRANT_VSPHERE_data_center_name')
      vsphere.compute_resource_name = env.fetch('BOSH_VAGRANT_VSPHERE_compute_resource_name')
      vsphere.template_name = env.fetch('BOSH_VAGRANT_VSPHERE_vm_folder') + '/' + env.fetch('BOSH_VAGRANT_VSPHERE_template_name')
      vsphere.customization_spec_name = env.fetch('BOSH_VAGRANT_VSPHERE_customization_spec_name')
      vsphere.resource_pool_name = env.fetch('BOSH_VAGRANT_VSPHERE_resource_pool_name')
      vsphere.name = env.fetch('BOSH_VAGRANT_VSPHERE_name')
    end
  end

  config.vm.provision :shell do |shell|
    shell.inline = <<-BASH
cat > /etc/apt/sources.list <<EOS
deb http://us.archive.ubuntu.com/ubuntu/ raring main restricted
deb-src http://us.archive.ubuntu.com/ubuntu/ raring main restricted

deb http://us.archive.ubuntu.com/ubuntu/ raring-updates main restricted
deb-src http://us.archive.ubuntu.com/ubuntu/ raring-updates main restricted

deb http://security.ubuntu.com/ubuntu raring-security main restricted
deb-src http://security.ubuntu.com/ubuntu raring-security main restricted
deb http://security.ubuntu.com/ubuntu raring-security universe
deb-src http://security.ubuntu.com/ubuntu raring-security universe
deb http://security.ubuntu.com/ubuntu raring-security multiverse
deb-src http://security.ubuntu.com/ubuntu raring-security multiverse

## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu
## team. Also, please note that software in universe WILL NOT receive any
## review or updates from the Ubuntu security team.
deb http://us.archive.ubuntu.com/ubuntu/ raring universe
deb-src http://us.archive.ubuntu.com/ubuntu/ raring universe
deb http://us.archive.ubuntu.com/ubuntu/ raring-updates universe
deb-src http://us.archive.ubuntu.com/ubuntu/ raring-updates universe
deb http://us.archive.ubuntu.com/ubuntu/ raring multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ raring multiverse
deb http://us.archive.ubuntu.com/ubuntu/ raring-updates multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ raring-updates multiverse
EOS

      apt-get -y update
    BASH
  end

  config.vm.provision :shell do |shell|
    shell.inline = <<-BASH
      mkdir -p /mnt/stemcells
      chown -R ubuntu /mnt/stemcells
      mkdir -p /bosh/tmp
      #git --git-dir=/bosh/.git --work-tree=/bosh checkout /bosh
      (cd /bosh && git submodule update --init --recursive)
      chown -R ubuntu:ubuntu /bosh
      (cd /bosh && bundle install --local)
    BASH
  end

  config.omnibus.chef_version = :latest
  config.berkshelf.enabled = true

  config.vm.provision :chef_solo do |chef|
    chef.run_list = %w(recipe[golang] recipe[stemcell-golang])

    chef.json = {
      go: {
        version: '1.2.2',
      }
    }
  end

  config.vm.synced_folder '../', '/bosh/'
end
